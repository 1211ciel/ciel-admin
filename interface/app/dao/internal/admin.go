// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// AdminDao is the manager for logic model data accessing and custom defined data operations functions management.
type AdminDao struct {
	gmvc.M              // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      adminColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB       // DB is the raw underlying database management object.
	Table  string       // Table is the underlying table name of the DAO.
}

// AdminColumns defines and stores column names for table s_admin.
type adminColumns struct {
	Id        string //
	Rid       string //
	Uname     string //
	Icon      string //
	Pwd       string //
	Status    string //
	Desc      string //
	CreatedAt string //
	UpdatedAt string //
}

// NewAdminDao creates and returns a new DAO object for table data access.
func NewAdminDao() *AdminDao {
	columns := adminColumns{
		Id:        "id",
		Rid:       "rid",
		Uname:     "uname",
		Icon:      "icon",
		Pwd:       "pwd",
		Status:    "status",
		Desc:      "desc",
		CreatedAt: "created_at",
		UpdatedAt: "updated_at",
	}
	return &AdminDao{
		C:     columns,
		M:     g.DB("default").Model("s_admin").Safe(),
		DB:    g.DB("default"),
		Table: "s_admin",
	}
}
