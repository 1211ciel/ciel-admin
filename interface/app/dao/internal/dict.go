// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// DictDao is the manager for logic model data accessing and custom defined data operations functions management.
type DictDao struct {
	gmvc.M             // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      dictColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB      // DB is the raw underlying database management object.
	Table  string      // Table is the underlying table name of the DAO.
}

// DictColumns defines and stores column names for table s_dict.
type dictColumns struct {
	Id        string //
	K         string //
	V         string //
	Desc      string //
	Group     string //
	Status    string //
	Type      string // 0 文本，1 img
	CreatedAt string //
	UpdatedAt string //
}

// NewDictDao creates and returns a new DAO object for table data access.
func NewDictDao() *DictDao {
	columns := dictColumns{
		Id:        "id",
		K:         "k",
		V:         "v",
		Desc:      "desc",
		Group:     "group",
		Status:    "status",
		Type:      "type",
		CreatedAt: "created_at",
		UpdatedAt: "updated_at",
	}
	return &DictDao{
		C:     columns,
		M:     g.DB("default").Model("s_dict").Safe(),
		DB:    g.DB("default"),
		Table: "s_dict",
	}
}
