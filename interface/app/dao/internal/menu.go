// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// MenuDao is the manager for logic model data accessing and custom defined data operations functions management.
type MenuDao struct {
	gmvc.M             // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      menuColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB      // DB is the raw underlying database management object.
	Table  string      // Table is the underlying table name of the DAO.
}

// MenuColumns defines and stores column names for table s_menu.
type menuColumns struct {
	Id        string //
	Pid       string //
	Name      string //
	Path      string //
	Icon      string //
	Type      string // 0 normal,1 group,2 divide
	Sort      string //
	Status    string //
	CreatedAt string //
	UpdatedAt string //
}

// NewMenuDao creates and returns a new DAO object for table data access.
func NewMenuDao() *MenuDao {
	columns := menuColumns{
		Id:        "id",
		Pid:       "pid",
		Name:      "name",
		Path:      "path",
		Icon:      "icon",
		Type:      "type",
		Sort:      "sort",
		Status:    "status",
		CreatedAt: "created_at",
		UpdatedAt: "updated_at",
	}
	return &MenuDao{
		C:     columns,
		M:     g.DB("default").Model("s_menu").Safe(),
		DB:    g.DB("default"),
		Table: "s_menu",
	}
}
