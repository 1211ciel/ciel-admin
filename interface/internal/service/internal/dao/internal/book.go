// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-01-27 15:11:39
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// BookDao is the data access object for table b_book.
type BookDao struct {
	table   string      // table is the underlying table name of the DAO.
	group   string      // group is the database configuration group name of current DAO.
	columns BookColumns // columns contains all the column names of Table for convenient usage.
}

// BookColumns defines and stores column names for table b_book.
type BookColumns struct {
	Id             string //
	Tid            string //
	CategoryId     string //
	FirstChapterId string //
	TypeDetails    string // - 小说             - 诗歌             - 散文             - 童话             - 传记
	WriterId       string //
	Name           string //
	Icon           string //
	HiddenWords    string //
	Summary        string //
	Sort           string //
	Scope          string //
	Status         string // 1 ok 2 off 3 home show
	Theme          string // #96b97d,dark,#f6f4f0,dark  top:light top:dark nav:light nav:dark
	ClickNum       string //
	PublishTime    string //
	CreatedAt      string //
	UpdatedAt      string //
	Ex1            string //
}

//  bookColumns holds the columns for table b_book.
var bookColumns = BookColumns{
	Id:             "id",
	Tid:            "tid",
	CategoryId:     "category_id",
	FirstChapterId: "first_chapter_id",
	TypeDetails:    "type_details",
	WriterId:       "writer_id",
	Name:           "name",
	Icon:           "icon",
	HiddenWords:    "hidden_words",
	Summary:        "summary",
	Sort:           "sort",
	Scope:          "scope",
	Status:         "status",
	Theme:          "theme",
	ClickNum:       "click_num",
	PublishTime:    "publish_time",
	CreatedAt:      "created_at",
	UpdatedAt:      "updated_at",
	Ex1:            "ex1",
}

// NewBookDao creates and returns a new DAO object for table data access.
func NewBookDao() *BookDao {
	return &BookDao{
		group:   "default",
		table:   "b_book",
		columns: bookColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *BookDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *BookDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *BookDao) Columns() BookColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *BookDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *BookDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *BookDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
