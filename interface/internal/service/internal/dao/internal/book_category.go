// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-01-27 15:11:39
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// BookCategoryDao is the data access object for table b_book_category.
type BookCategoryDao struct {
	table   string              // table is the underlying table name of the DAO.
	group   string              // group is the database configuration group name of current DAO.
	columns BookCategoryColumns // columns contains all the column names of Table for convenient usage.
}

// BookCategoryColumns defines and stores column names for table b_book_category.
type BookCategoryColumns struct {
	Id          string //
	Name        string //
	Icon        string //
	Color       string //
	HiddenWords string //
	Type        string // 1童话与儿童 2魔法与幻想 3战争与历史 4浪漫与爱情 5诗歌与艺术 6动作与冒险 7人物的故事 8动作与冒险 9神秘与侦探 10 科幻与宇宙 11惊悚与犯罪 12经济与理财 13时间的痕迹 14武器库 15问题与答案
	Sort        string //
	Status      string //
	CreatedAt   string //
	UpdatedAt   string //
}

//  bookCategoryColumns holds the columns for table b_book_category.
var bookCategoryColumns = BookCategoryColumns{
	Id:          "id",
	Name:        "name",
	Icon:        "icon",
	Color:       "color",
	HiddenWords: "hidden_words",
	Type:        "type",
	Sort:        "sort",
	Status:      "status",
	CreatedAt:   "created_at",
	UpdatedAt:   "updated_at",
}

// NewBookCategoryDao creates and returns a new DAO object for table data access.
func NewBookCategoryDao() *BookCategoryDao {
	return &BookCategoryDao{
		group:   "default",
		table:   "b_book_category",
		columns: bookCategoryColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *BookCategoryDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *BookCategoryDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *BookCategoryDao) Columns() BookCategoryColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *BookCategoryDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *BookCategoryDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *BookCategoryDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
