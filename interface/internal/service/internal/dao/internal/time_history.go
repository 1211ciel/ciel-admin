// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-01-27 15:11:39
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// TimeHistoryDao is the data access object for table t_time_history.
type TimeHistoryDao struct {
	table   string             // table is the underlying table name of the DAO.
	group   string             // group is the database configuration group name of current DAO.
	columns TimeHistoryColumns // columns contains all the column names of Table for convenient usage.
}

// TimeHistoryColumns defines and stores column names for table t_time_history.
type TimeHistoryColumns struct {
	Id          string //
	Century     string //
	Year        string //
	Month       string //
	Day         string //
	Type        string // 1科学技术 2战争与政治 3天灾人祸 4疾病与医学 5环境与自然 6社会与经济() 7 文化娱乐(书籍记录) 8 宗教与哲学() 9人物与事件(记录人物) 10问题与解决 11other 12 category
	TypeDetails string // 1 things 2birthday 3 dead 4book publish
	Name        string //
	Summary     string //
	Content     string //
	Tag         string //
	Sort        string //
	Status      string //
	CreatedAt   string //
	UpdatedAt   string //
}

//  timeHistoryColumns holds the columns for table t_time_history.
var timeHistoryColumns = TimeHistoryColumns{
	Id:          "id",
	Century:     "century",
	Year:        "year",
	Month:       "month",
	Day:         "day",
	Type:        "type",
	TypeDetails: "type_details",
	Name:        "name",
	Summary:     "summary",
	Content:     "content",
	Tag:         "tag",
	Sort:        "sort",
	Status:      "status",
	CreatedAt:   "created_at",
	UpdatedAt:   "updated_at",
}

// NewTimeHistoryDao creates and returns a new DAO object for table data access.
func NewTimeHistoryDao() *TimeHistoryDao {
	return &TimeHistoryDao{
		group:   "default",
		table:   "t_time_history",
		columns: timeHistoryColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *TimeHistoryDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *TimeHistoryDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *TimeHistoryDao) Columns() TimeHistoryColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *TimeHistoryDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *TimeHistoryDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *TimeHistoryDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
