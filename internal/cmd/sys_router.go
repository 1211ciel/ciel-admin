package cmd

import (
	"ciel-admin/internal/controller"
	"ciel-admin/internal/service"
	"github.com/gogf/gf/v2/net/ghttp"
)

func registerSysRouter(s *ghttp.Server) {
	s.Group("/", func(g *ghttp.RouterGroup) {
		g.GET("/", controller.Home.IndexPage)
		g.GET("/login", controller.Admin.LoginPage)
	})
	s.Group("/menu", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.Menu.Path)
		g.GET("/list", controller.Menu.List)
		g.GET("/getById", controller.Menu.GetById)
		g.Middleware(service.Middleware().LockAction)
		g.DELETE("/del", controller.Menu.Del)
		g.POST("/post", controller.Menu.Post)
		g.PUT("/put", controller.Menu.Put)
	})
	s.Group("/api", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.Api.Path)
		g.GET("/list", controller.Api.List)
		g.GET("/getById", controller.Api.GetById)
		g.DELETE("/del", controller.Api.Del)
		g.POST("/post", controller.Api.Post)
		g.PUT("/put", controller.Api.Put)
	})
	s.Group("/role", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.Role.Path)
		g.GET("/list", controller.Role.List)
		g.GET("/getById", controller.Role.GetById)
		g.GET("/roles", controller.Role.Roles) // select all role info
		g.DELETE("/del", controller.Role.Del)
		g.GET("/nomenus", controller.RoleMenu.RoleNoMenus)
		g.GET("/noapis", controller.RoleMenu.RoleNoApis)
		g.GET("/currentMenus", controller.RoleMenu.CurrentMenus)
		g.POST("/post", controller.Role.Post)
		g.PUT("/put", controller.Role.Put)
	})
	s.Group("/roleApi", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.RoleApi.Path)
		g.GET("/list", controller.RoleApi.List)
		g.DELETE("/del", controller.RoleApi.Del)
		g.POST("/post", controller.RoleApi.Post)
	})
	s.Group("/roleMenu", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.RoleMenu.Path)
		g.GET("/list", controller.RoleMenu.List)
		g.DELETE("/del", controller.RoleMenu.Del)
		g.POST("/post", controller.RoleMenu.Post)
	})
	s.Group("/admin", func(g *ghttp.RouterGroup) {
		g.POST("/login", controller.Admin.Login)
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/logout", controller.Admin.Logout)
		g.GET("/path", controller.Admin.Path)
		g.GET("/list", controller.Admin.List)
		g.GET("/getById", controller.Admin.GetById)
		g.DELETE("/del", controller.Admin.Del)
		g.POST("/post", controller.Admin.Post)
		g.PUT("/put", controller.Admin.Put)
		g.POST("/updatePwd", controller.Admin.UpdatePwd)
	})
	s.Group("/dict", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.Dict.Path)
		g.GET("/list", controller.Dict.List)
		g.GET("/getById", controller.Dict.GetById)
		g.DELETE("/del", controller.Dict.Del)
		g.POST("/post", controller.Dict.Post)
		g.PUT("/put", controller.Dict.Put)
	})
	s.Group("/file", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.File.Path)
		g.GET("/list", controller.File.List)
		g.GET("/getById", controller.File.GetById)
		g.DELETE("/del", controller.File.Del)
		g.POST("/post", controller.File.Post)
		g.PUT("/put", controller.File.Put)
		g.POST("/upload", controller.File.Upload)
	})
	s.Group("/gen", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.Gen.Path)
		g.GET("/tables", controller.Gen.Tables)
		g.GET("/fields", controller.Gen.Fields)
		g.POST("/genCode", controller.Gen.GenCode)
	})
	s.Group("/sys", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.Sys.Path)
		g.GET("/path/github", controller.Sys.PathGithub)
		g.GET("/path/oschina", controller.Sys.OsChina)
		g.GET("/path/douban", controller.Sys.Douban)
	})
	s.Group("/rss", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/fetch", controller.Rss.Fetch)
	})
	s.Group("/user", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.User.Path)
		g.GET("/list", controller.User.List)
		g.GET("/getById", controller.User.GetById)
		g.Middleware(service.Middleware().LockAction)
		g.DELETE("/del", controller.User.Del)
		g.POST("/post", controller.User.Post)
		g.PUT("/put", controller.User.Put)
	})
	s.Group("/user", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.User.Path)
		g.GET("/list", controller.User.List)
		g.GET("/getById", controller.User.GetById)
		g.Middleware(service.Middleware().LockAction)
		g.DELETE("/del", controller.User.Del)
		g.POST("/post", controller.User.Post)
		g.PUT("/put", controller.User.Put)
	})
	s.Group("/user", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.User.Path)
		g.GET("/list", controller.User.List)
		g.GET("/getById", controller.User.GetById)
		g.Middleware(service.Middleware().LockAction)
		g.DELETE("/del", controller.User.Del)
		g.POST("/post", controller.User.Post)
		g.PUT("/put", controller.User.Put)
	})
	s.Group("/user", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.User.Path)
		g.GET("/list", controller.User.List)
		g.GET("/getById", controller.User.GetById)
		g.Middleware(service.Middleware().LockAction)
		g.DELETE("/del", controller.User.Del)
		g.POST("/post", controller.User.Post)
		g.PUT("/put", controller.User.Put)
	})
	s.Group("/user", func(g *ghttp.RouterGroup) {
		g.Middleware(service.Middleware().AuthAdmin)
		g.GET("/path", controller.User.Path)
		g.GET("/list", controller.User.List)
		g.GET("/getById", controller.User.GetById)
		g.Middleware(service.Middleware().LockAction)
		g.DELETE("/del", controller.User.Del)
		g.POST("/post", controller.User.Post)
		g.PUT("/put", controller.User.Put)
	})
}
