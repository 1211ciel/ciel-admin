// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-03-09 17:01:42
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// DiaryDao is the data access object for table c_diary.
type DiaryDao struct {
	table   string       // table is the underlying table name of the DAO.
	group   string       // group is the database configuration group name of current DAO.
	columns DiaryColumns // columns contains all the column names of Table for convenient usage.
}

// DiaryColumns defines and stores column names for table c_diary.
type DiaryColumns struct {
	Id        string //
	Aid       string //
	Title     string //
	Level     string //
	Content   string //
	Sign1     string //
	Sign2     string //
	Sign3     string //
	Sign4     string //
	Sign5     string //
	Sign6     string //
	Sign7     string //
	CreatedAt string //
	UpdatedAt string //
}

//  diaryColumns holds the columns for table c_diary.
var diaryColumns = DiaryColumns{
	Id:        "id",
	Aid:       "aid",
	Title:     "title",
	Level:     "level",
	Content:   "content",
	Sign1:     "sign1",
	Sign2:     "sign2",
	Sign3:     "sign3",
	Sign4:     "sign4",
	Sign5:     "sign5",
	Sign6:     "sign6",
	Sign7:     "sign7",
	CreatedAt: "created_at",
	UpdatedAt: "updated_at",
}

// NewDiaryDao creates and returns a new DAO object for table data access.
func NewDiaryDao() *DiaryDao {
	return &DiaryDao{
		group:   "default",
		table:   "c_diary",
		columns: diaryColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *DiaryDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *DiaryDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *DiaryDao) Columns() DiaryColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *DiaryDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *DiaryDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *DiaryDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
