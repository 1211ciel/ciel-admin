// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// ThingRecordDao is the data access object for table f_thing_record.
type ThingRecordDao struct {
	table   string             // table is the underlying table name of the DAO.
	group   string             // group is the database configuration group name of current DAO.
	columns ThingRecordColumns // columns contains all the column names of Table for convenient usage.
}

// ThingRecordColumns defines and stores column names for table f_thing_record.
type ThingRecordColumns struct {
	Id         string //
	Tid        string //
	RecordDate string //
	Score      string //
	Day        string //
	Desc       string //
	CreatedAt  string //
}

//  thingRecordColumns holds the columns for table f_thing_record.
var thingRecordColumns = ThingRecordColumns{
	Id:         "id",
	Tid:        "tid",
	RecordDate: "record_date",
	Score:      "score",
	Day:        "day",
	Desc:       "desc",
	CreatedAt:  "created_at",
}

// NewThingRecordDao creates and returns a new DAO object for table data access.
func NewThingRecordDao() *ThingRecordDao {
	return &ThingRecordDao{
		group:   "default",
		table:   "f_thing_record",
		columns: thingRecordColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *ThingRecordDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *ThingRecordDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *ThingRecordDao) Columns() ThingRecordColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *ThingRecordDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *ThingRecordDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *ThingRecordDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
